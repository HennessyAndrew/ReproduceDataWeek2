skip
g+geom_point(color="pink",size=4,alpha=1/2)
skip
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color=drv), + ggtitle("Swirl Rules!") labsx="Displacement", labs="Hwy Mileage")
skip
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
skip
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
skip
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
skip
plot(myx, myy, type = "l", ylim = c(-3,3))
skip
g <- ggplot(testdat, aes(x = myx, y = myy))
skip
g + geom_line()
g + geom_line() + ylim = c(-3,3))
skip
g + geom_line() + ylim(-3,3)
skip
g + geom_line() + coord_cartesian(ylim=c(-3,3))
skip
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
skip
g + geom_point()
g + geom_point(facet_grid, formula = drv~cyl, margins = TRUE)
skip
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
skip
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
skip
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
str(diamonds)
skip
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth = 18497/30)
str(brk)
skip
brk
counts
qplot(price,data=diamonds,binwidth = 18497/30, fill=cut)
skip
qplot(price,data=diamonds,geom="density")
skip
qplot(price,data=diamonds,geom="density",color=cut)
skip
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, shape = cut)
qplot(carat,price,data=diamonds, shape = color)
qplot(carat,price,data=diamonds, color = cut)
qplot(carat,price,data=diamonds, color = cut, geom_smooth ="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
skip
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
skip
g <- ggplot(diamonds,aes(depth,price))
summary(g)
geom_point (g, slpha = 1/3)
skip
g+geom_point(alpha=1/3)
skip
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
skip
diamonds$car2 <- cut(diamonds$carat,cutpoints)
skip
g <- ggplot(diamonds,aes(depth,price))
skip
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
skip
diamonds[myd,]
skip
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
skip
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
install.packages("nlme")
install.packages("nlme")
install.packages("lattice")
library(nlme)
library(lattice)
plot <- xyplot(weight ~ Time | Diet,BodyWeight)
class(plot)
myxlab <- "Carat"
myylab <- "Price"
mymain <- "Diamonds are Sparkly!"
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages(""swir"gplot")
install.packages("gplot")
libray(glpot)
library (gplot)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
install.packages("qplot")
library(qplot)
install.package ("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
library (ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
?ggplot2()
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
arguments(diamonds)
skip
str(diamonds)
skip
qplot(price,data=diamonds)
skip
range(diamonds$price)
skip
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
skip
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
skip
qplot(price,data=diamonds,geom="density")
skip
qplot(price,data=diamonds,geom="density",color=cut)
skip
qplot(carat,price,data=diamonds)
skip
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut, geom_smooth=lm)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
skip
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
skip
g <- ggplot(diamonds,aes(depth,price))
g
summary(g)
skip
g+geom_point(alpha=1/3)
skip
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
skip
diamonds$car2 <- cut(diamonds$carat,cutpoints)
skip
g <- ggplot(diamonds,aes(depth,price))
skip
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
skip
diamonds[myd,]
skip
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
skip
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
0
0
0
0
0skip
0
exit
zero
stop
install.packages("swirl")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
install.packages("swirl")
install_from_swirl("R Programming")
swirl()
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
skip
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(y,newClust,mean)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
skip
apply(distTmp2,2,which.min)
skip
points(x,y,pch=19,cex=2,col=cols1[newClust2])
skip
apply(x,newClust2,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
skip
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
skip
kmeans(dataFrame,centers=3)
skip
kmObj$iter
skip
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
skip()
skip
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
library(swirl)
swirl()
00
0
exit
0
install.packages("swirl")
install_from_swirl("Exploratory_Data_Analysis")
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
swirl()
dim(ssd)
skip
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
skip
sub1 <- subset(ssd, subject == 1)
dim(sub1)
skip
names(sub1[1:12])
skip
myedit("showXY.R")
skip
showMe(1:6)
skip()
skip
hclustering <- hclust(mdist)
skip
myplclust(hclustering, lab.col = unclass(sub1$activity))
skip
mdist <- dist(sub1[,10:12])
skip
hclustering <- hclust(mdist)
skip
myplclust(hclustering, lab.col = unclass(sub1$activity))
skip
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
skip
maxCon <- which.max(svd1$v[,2])
skip
mdist <- dist(sub1[,c(10:12,maxCon)])
skip
hclustering <- hclust(mdist)
skip
myplclust(hclustering, lab.col = unclass(sub1$activity))
skip
names(sub1[maxCon])
skip
skip
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
skip
table(kClust$cluster, sub1$activity)
skip
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
skip
table(kClust$cluster, sub1$activity)
skip
dim(kClust$centers)
kClust$size==29
laying <- which(kClust$size==29)
skip
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
skip
names(sub1[,1:3])
skip
walkdown <- which(kClust$size==49)
skip
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory_Data_Analysis")
swirl()
dim(pm0)
head(pm0)
cnames
strsplit (cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
skip
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
skip
x0 <- pm0$Sample.Value
str(x0)
skip
mean(is.na(x0))
names(pm1) < make.names(cnames[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
skip
x1 <- pm1$Sample.Value
mean(is.na(x1))
skip
summary(x0)
summary(x1)
boxplort (x0, x1)
boxplot (x0, x1)
skip
boxplot (log10(x0), log10(x1))
skip
negative <- x1 < 0
skip
sum(negative, na.rm = TRUE)
skip
mean(negative, na.rm = TRUE)
skip
dates <- pm1$Date
str(dates)
skip
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
skip
hist(dates[negative],"month")
skip
str(site0)
skip
both <- intersect(site0, site1)
both
head(pm0)
skip
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
skip
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
skip
x0sub <- pm0sub$Sample.Value
skip
x1sub <- pm1sub$Sample.Value
skip
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
skip
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
skip
plot(dates0, x0sub, pch = 20)
skip
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
skip
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
skip
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
skip
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
skip
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
skip
summary(mn0)
summary(mn1)
skip
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
skip
mrg <- merge(d0, d1, by = "state")
dim(mrg)
skip
head(mrg)
skip
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
skip()
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
skip
mrg[mrg$mean.x < mrg$mean.y,]
#I used the info here https://rpubs.com/sureshbk/358994 for the assignment
#The dataset is activity.csv
#The variables included in this dataset are:
# steps: Number of steps taking in a 5-minute interval (missing values are coded as \color{red}{\verb|NA|}NA)
# date: The date on which the measurement was taken in YYYY-MM-DD format
# interval: Identifier for the 5-minute interval in which measurement was taken
# The dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.
#Set directory setwd ("C:/Users/Charlotte/Documents/GitHub/ReproduceDataWeek2")
#load data from directory
DataFrame <- read.csv( "activity.csv")
install.packages("magrittr")
library(magrittr)
#add dplyr to get summarise
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
#Calculate the total number of steps taken per day
stepsByDay <- DataFrame %>% group_by(date) %>% summarise(stepsperday = sum(steps,na.rm = TRUE))
ggplot (stepsByDay)
setwd ("C:/Users/Charlotte/Documents/GitHub/ReproduceDataWeek2")
DataFrame <- read.csv( "activity.csv")
install.packages("magrittr")
library(magrittr)
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
stepsByDay <- DataFrame %>% group_by(date) %>% summarise(stepsperday = sum(steps,na.rm = TRUE))
install.packages("dplyr")
library(dplyr)
stepsByDay <- DataFrame %>% group_by(date) %>% summarise(stepsperday = sum(steps,na.rm = TRUE))
ggplot (stepsByDay)
ggplot2 (stepsByDay)
plot (stepsByDay)
qplot (stepsByDay)
qplot (stepsByDay)\
qplot (stepsByDay)
?qplot()
?ggplot2
install.packages("ggplot2")
qplot (stepsByDay)
gplot  (stepsByDay)
ggplot (stepsByDay)
remove.packages("ggplot2")
install.packages("colorspace")
library(colorspace)
qplot  (stepsByDay)
ggplot2  (stepsByDay)
install.packages("ggplot2")
library(ggplot2)
ggplot2(stepsByDay)
ggplot(stepsByDay)
qplot (stepsByDay, data=stepsByDay)
qplot (stepsperday,data=stepsByDay,na.rm=TRUE,binwidth=500)
qplot (stepsperday,data=stepsByDay,na.rm=TRUE,binwidth=100)
qplot (stepsperday,data=stepsByDay,na.rm=TRUE)
qplot (data=stepsByDay,na.rm=TRUE)
qplot (stepsByDay, data=stepsByDay,na.rm=TRUE)
qplot (stepsByDay, data=stepsByDay,na.rm=TRUE)
qplot (stepsByDay, data=stepsByDay,na.rm=TRUE, binwidth=100)
qplot (stepsByDay, data=stepsByDay, na.rm=TRUE, binwidth=500)
qplot (stepsByDay, data=stepsByDay, na.rm=TRUE, binwidth=61)
qplot(stepsperday,data=stepsByDay,na.rm=TRUE,binwidth=500)
qplot(stepsperday,data=stepsByDay,na.rm=TRUE,binwidth=1000)
qplot(stepsperday,data=stepsByDay,binwidth=1000)
qplot(stepsperday,data=stepsByDay,binwidth=500)
